# объявление одномерного массива
# $a0 -- адрес первого элемента
# $a1 -- размер измерения
DEFARR1:
	sw $a1, 4($a0)      # Сохранение границы
	li $v0, 4       # Загрузка размера слова
	mul $v0, $v0, $a1   # Подсчёт размера первого измерения массива в байтах
	sub $v0, $a0, $v0   # Считаем адрес после конца массива, т.е. $v0 -- на слово ниже последнего элемента
	addi $v0, $v0, -4
	jr $ra

# объявление многомерного массива, но сначала обязана вызываться процедура DEFARR1
# $a0 -- адрес первого элемента
# $a1 -- размер измерения
# $a2 -- адрес первого элемента предыдущего измерения
# $a3 -- размер предыдущего измерения
DEFARR2:
	sw $a0, 0($a2)      # Сохраняем адрес в элементе предыдущего измерения
	move $t0, $ra     # Запоминаем $ra, чтобы он не затёрся
	jal DEFARR1       # Выделение памяти под массив
	move $ra, $t0     # Восстанавливаем $ra
	addi $a2, $a2, -4   # В $a2 следующий элемент в предыдущем измерении
	addi $a0, $v0, -4   # В $a0 первый элемент массива в текущем измерении, плюс выделяется место под размеры
	addi $a3, $a3, -1   # Уменьшаем счётчик
	bne $a3, $0, DEFARR2  # Прыгаем, если ещё не всё выделили
	jr $ra